from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from models.database import Database
from services.keyboards import add_word_keyboard, get_words_keyboard


async def my_words(update: Update, context: ContextTypes.DEFAULT_TYPE, page: int = 0):
    if update.callback_query:
        user_id = update.callback_query.from_user.id
        message = update.callback_query.message
        await update.callback_query.answer()
    else:
        user_id = update.effective_user.id
        message = update.message

    database = Database.load()
    user = next((u for u in database.users if u.id == user_id), None)

    if not user:
        text = "–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è, —â–æ–± –ø–æ—á–∞—Ç–∏ –¥–æ–¥–∞–≤–∞—Ç–∏ —Å–ª–æ–≤–∞."
        keyboard = [[InlineKeyboardButton("üöÄ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è", callback_data="start")]]
        await message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
        return

    user_words = [w for w in database.words if w.user_id == user_id]
    if not user_words:
        text = "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Å–ª—ñ–≤ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è. –î–æ–¥–∞–π—Ç–µ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞, —â–æ–± –ø–æ—á–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è:"
        await message.reply_text(text, reply_markup=get_words_keyboard(user_words))
        return

    start = page * 10
    end = start + 10
    page_words = user_words[start:end]

    text = "–í–∞—à—ñ —Å–ª–æ–≤–∞ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è:\n\n"
    for i, word in enumerate(page_words, start=start + 1):
        rank = "üü©" if word.score >= 6 else "üü®" if word.score >= 3 else "üü•"
        last_seen_str = word.last_seen.strftime("%d.%m.%Y") if word.last_seen else "—â–µ –Ω–µ –≤—á–∏–ª–∏"
        text += f"{i}. {word.english_word} ‚Äî {word.ukrainian_word} {rank} (–ë–∞–ª: {word.score}, –û—Å—Ç–∞–Ω–Ω—ñ–π —Ä–∞–∑: {last_seen_str})\n"

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    await message.reply_text(text, reply_markup=get_words_keyboard(user_words, page))

    